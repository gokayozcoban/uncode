
# UNICODE

# HATIRLATMA:
# ASCII 7 BİTLİK BİR SİSTEMDİR. YANİ 0 VE 1 'LERDEN OLUŞAN BINARY SAYMA SİS-
# TEMİNDE HER SAYI EN FAZLA 7 DEFA KULLANILMALIDIR. YANİ HER SAYININ KAREKÖKÜ
# KADAR BİR KODLAMA SİSTEMİ. BU DA 128' E (0'DAN 127'YE) TEKABÜL EDER.
yedi_bit = 127 
print(bin(127)[2:])
print(yedi_bit.bit_length())
#1111111
#7

#8 BİT OLSAYDI 256 'YA (0'DAN 255'E) TEKABÜL EDECEKTİ.
sekiz_bit = 255
print(bin(255)[2:])
print(sekiz_bit.bit_length())
#11111111
#8

# BU YÜZDEN İNGİLİZCEDEN FARKLI DİL KONUŞAN AVRUPA VE ASYA 8 BİTLİK BİLGİSAYAR-
# LARDA FAZLADAN BİR BİTİN BOŞTA KALMASINI DEĞERLENDİREREK 128 - 256 ARASINDAKİ
# BOŞLUKTAN YARARLANMAYA BAŞLADI; BU 1 BİTLİK BOŞLUĞA KENDİ KARAKTERLERİNİ
# KODLADILAR. HALİYLE FRANSIZLAR BAŞKA, JAPONLAR BAŞKA, ALMANLAR BAŞKA, YUNANLAR
# BAMBAŞKA KARAKTERLER KULLANMAYA BAŞLADILAR.
# BAŞLANGIÇTA ASCII'NİN ORTAYA ÇIKIŞ SEBEBİ BİLGİSAYARLAR ARASINDA VERİ ALIŞVE-
# RİŞİNİ MÜMKÜN KILMAKTI. AMA BİLGİSAYRLARIN DÜNYAYA YAYILMASIYLA İLK BAŞTAKİ
# VERİ AKTARIMI PROBLEMİ TEKRAR ORTAYA ÇIKTI. (CP1254) NUMARALI KOD SAYFASIYLA
# KODLANMIŞ BİR TÜRKÇE METİN, (CP1250) KOD SAYFASIYLA KODLANMIŞ BİR ALMAN BİL-
# GİSAYARINDA KARAKTERLERIN OKUNAMAMASINA NEDEN OLUYORDU.
# BU DURUMU ORTADAN KALDIRMAK İÇİN 1987'DE
# XEROX COMPANY'DEN JOE BECKER,
# APPLE cO.DEN DE LEE COLLINS VE MARK DAVIS
# UNICODE ADLI BİR ÇÖZÜM ÜZERİNDE ÇALIŞMAYA BAŞLADI.

# UNICODE DA ASCII GİBİ BİLGİSAYARLARDAKİ VERİ AKTARIMINI STANDARTLAŞTIRMAK İÇİN
# OLUŞTURULDU. ASCII'NİN YETERSİZ KALDIĞI YERLERİ TELAFİ ETMEK, DÜNYADAKİ TÜM
# KARAKTERLERİ STANDARTLAŞTIRMAK. AMAÇ BU.

# UNICODE, ASCII İLE KODLANAN TÜM KARAKTERLERİ OLDUĞU GİBİ ALDI VE ÜZERİNE DE
# 7 VEYA 8 BİTLİK DEĞİL, 16 BİTLİK BİR SİSTEM OLUŞTURDU. BU MANTIKLA İLK ORTAYA
# ÇIKTIĞINDA BİLE 2**16 = 65536 KARAKTERİN KODLANMASINA İZİN VERİYORDU. BUGÜN
# İSE BÖYLE BİR SINIR BİLE YOK. UNICODE 1 MİLYONDAN FAZLA KARAKTERİN KODLANMA-
# SINA İZİN VERİR. UNICODE SİSTEMİ ASCII'NIN AKSİNE DOĞRUDAN KARATERİ KODLAMAZ.
# YANİ A = "BİLMEM NE OLSUN" GİBİ ÇALIŞMAZ. UNICODE, KARAKTERİ TANIMLAR.
# UNICODE'DA HER KARAKTER TEK VE BENZERSİZ BİR KOD KONUMUNA (CODE POINT'E)
# SAHIPTİR. CODE POINT ŞU FOMÜLE GÖSTERİLİR:
# U + sayının_analtılı_değeri
# MESELA "a" HARFİNİN CODE POINT'İ u + 0061'DİR. 0061 SAYISI 16'LI BİR SAYIDIR.
# ONLUK SİSTEMDEKİ KARŞILIĞI 97'DİR:
print(int("61",16))
#97   # "a"NIN ASCII TABLOSUNDAKİ KARŞILIĞI DA 97'DİR.
# ASCII İLE UNICODE BİRBİRLERİNE KARIŞTIRILMAYACAK KADAR BİRBİRİNDEN FARKLI İKİ
# KAVRAMDIR. NETİCEDE ASCII BİR KODLAMA BİÇİMİDİR. UNICODE İSE PEK ÇOK FARKLI
# KODLAMA BİÇİMİNİ İÇİNDE BARINDIRAN DEVASA BİR SİSTEM.

# http://www.unicode.org/versions/Unicode6.2.0/UnicodeStandard-6.2.pdf

















































